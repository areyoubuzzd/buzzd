Steps to Share with Replit Agent:
1. Create ultra-simple-server.js at project root:

js
Copy
Edit
// ultra-simple-server.js
import express from "express";
import path from "path";
import { fileURLToPath } from "url";
import dotenv from "dotenv";
import api from "./server/index.js"; // update this if API is in another file
import connectDB from "./server/db.js"; // see step 2

dotenv.config();

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const app = express();
const PORT = process.env.PORT || 5000;

const staticPath = path.join(__dirname, "dist/public");
app.use(express.static(staticPath));

app.use("/api", api);

app.get("*", (req, res) => {
  res.sendFile(path.join(staticPath, "index.html"));
});

connectDB().then(() => {
  app.listen(PORT, () => {
    console.log(`✅ Server running at http://localhost:${PORT}`);
  });
});
2. Create/update server/db.js (or db.ts) to include retry logic for Neon Postgres:

ts
Copy
Edit
// server/db.ts or db.js
import { drizzle } from "drizzle-orm/neon-http";
import { neon } from "@neondatabase/serverless";

const connectDB = async () => {
  const maxRetries = 5;
  const wait = (ms: number) => new Promise(res => setTimeout(res, ms));

  for (let i = 0; i < maxRetries; i++) {
    try {
      const sql = neon(process.env.DATABASE_URL, {
        fetchOptions: { cache: "no-store" },
      });
      globalThis.db = drizzle(sql);
      console.log("✅ Connected to Neon DB");
      return;
    } catch (err) {
      console.error("❌ DB connection failed:", err.message);
      await wait(2000);
    }
  }

  throw new Error("❌ Could not connect to DB after retries");
};

export default connectDB;
3. Create a .replit.deploy file:

json
Copy
Edit
{
  "run": "node ultra-simple-server.js"
}
This tells Replit to start this single entry point in production.

4. Ensure vite.config.ts builds frontend to dist/public:

ts
Copy
Edit
build: {
  outDir: path.resolve(__dirname, "dist/public"),
  emptyOutDir: true,
}
5. Check folder structure is correct:

bash
Copy
Edit
/client/src/main.tsx
/client/src/index.css
/vite.config.ts
/server/index.js or index.ts
/server/db.ts
/dist/public/index.html (after build)
